mkdir ft_userdata
cd ft_userdata/

# Download the docker-compose file from the repository
curl https://raw.githubusercontent.com/freqtrade/freqtrade/stable/docker-compose.yml -o docker-compose.yml

# Pull the freqtrade image
docker-compose pull

# Create user directory structure
docker-compose run --rm freqtrade create-userdir --userdir user_data

# You should now have the following directory structure:
# ft_userdata
# └───user_data
#     ├───backtest_results
#     ├───data
#     ├───hyperopts
#     ├───hyperopt_results
#     ├───logs
#     ├───notebooks
#     ├───plot
#     └───strategies

# To verify freqtrade is installed correctly and ready for use, issue the help command:

docker-compose run --rm freqtrade --help
# Learn Data Science with

# You should see the following output

# usage: freqtrade [-h] [-V] 
#         {trade,create-userdir,new-config,new-hyperopt,new-strategy,download-data,convert-data,convert-trade-data,
#         list-data,backtesting,edge,hyperopt,hyperopt-list,hyperopt-show,list-exchanges,list-hyperopts,list-markets,
#         list-pairs,list-strategies,list-timeframes,show-trades,test-pairlist,instal l-ui,plot-dataframe,plot-profit}

# configure trade pairs.json in data\binance and run
docker-compose run freqtrade download-data --exchange binance -t 15m
#  list trade pairs
 docker-compose run freqtrade list-data --exchange binance
# backtesting
 docker-compose run freqtrade backtesting --datadir user_data/data/binance --export trades  --stake-amount 100 -s BBRsiStrategy -i 15m
#  plottting
docker-compose run freqtrade plot-dataframe --strategy BBRSINaiveStrategy -p ALGO/USDT -i 15
